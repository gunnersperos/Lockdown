<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoImgBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <metadata name="NotifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>36</value>
  </metadata>
</root>